#!/bin/bash

## read input, display help if necessary
if [[ "$@" == *--help* ]]; then
    cat<<EOF

 This command set a tag for each submodule and
 push it.

 The tag contains the date and the time for the 
 moment of usage.

Usage:
	git-rtag <set|push|checkout|show|delete> --<Option>

Basic Options:
 set        -  Set a tag with current date and time foreach submodule
 show       -  Show tags foreach submodul
 push       -  Push the last tag foreach submodule
 checkout   -  Checkout the metarepo and every submodule
 delete     -  Experimental! Use at your own risk. Deletes a tag in HEAD and origin. 
	       Option need to be set for <last|first> tag

Options:
 --help     - show this help page
 --dry      - dry run
 --help     - Show this help page.
 --force    - When switching branches, proceed even if the index or the working tree differs from HEAD. 
	      This is used to throw away local changes.
 --dry      - Do a dry-run.
 --last     - Deletes the lastest tag.
 --first    - Deletes the oldest (first) tag.

EOF
    exit 0;
fi

## Set the the name for the tag and the submodules to exclude
NAME=test
EXCLUDE='git_tools'

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' 


function tagName () {
	today=`date +%Y%m%d_%H%M`
	tag_name=${NAME}_${today}
}

function tagList () {
		gittaglist=( $( git tag --list ${NAME}_????????_????) )
	}

function setTag () {
		echo "set tag for metarepo"
		git tag $tag_name

		## Set the tags foreach submodule
		git submodule foreach "eval \"case \$name in 
					$EXCLUDE) 
						;; 
					*) 
						git tag $tag_name
						echo 'Set tag'
						;; 
				esac\""
			}

function pushTag () {
		# push tag for metarepo
		git push origin $num_tag
		echo 'Push tag metarepo'
		# push tag foreach submodule
		git submodule foreach "eval \"case \$name in 
					$EXCLUDE) 
						;; 
					*) 
						git push origin $num_tag
						echo 'Push tag'
						;; 
				esac\""
			}

function checkoutTag () {
		# checkout meta and submodules
		echo "Checkout meta $num_tag"
		git checkout $num_tag

		git submodule foreach "eval \"case \$name in 
					$EXCLUDE) 
						;; 
					*) 
						git checkout $num_tag $2
						echo 'Checkout tag'
						;; 
				esac\""
			}

function deleteTag () {
		# delete tag for metarepo remote and local
		git push --delete origin $num_tag
		git tag --delete $num_tag

		# delete tag foreach submodule remote and local
		git submodule foreach "eval \"case \$name in 
					$EXCLUDE) 
						;; 
					*) 
						git push --delete origin $num_tag
						git tag --delete $num_tag
						;; 
				esac\""
			}

## function for getting the latest tag for the current day
function lastTag () {
		tagList
		num_tags=${#gittaglist[@]}
		if [[ $num_tags == 0 ]]; then
			echo "No tags for this name"
			exit 1;

			elif [[ $num_tags == 1 ]]; then
				num_tag=${gittaglist[@]}
			else
				num_tag=${gittaglist[-1]}
		fi
	}

function firstTag () {
		tagList
		num_tags=${#gittaglist[@]}
		if [[ $num_tags == 0 ]]; then
			echo "No tags for this name"
		exit 1;
		num_tag=${gittaglist[1]}
		fi
	}

function yesno(){
	read -p "Are you sure? " -n 1 -r
	echo    # (optional) move to a new line
		if [[ ! $REPLY =~ ^[Yy]$ ]]
		then
		    exit 1
		fi
	}

## fetch for meta and submodules
echo -e "${YELLOW}Download objects and refs from another repository for meta and submoduls ${NC}"
git fetch -p
git submodule foreach git fetch -p

case "$1" in
	set)
		tagName
		echo -e "${Yellow}Set ${RED}$tag_name ${YELLOW}for metarepo and submodules ${NC}"
		yesno
		if [[ "$@" == *--dry* ]]; then
			echo "Set $tag_name$"
			exit 0
		fi
		setTag
		;;

	show)
#		echo -e "${YELLOW}List all tags for ${RED}$NAME ${NC}"
		git tag
		git submodule foreach "git tag"
		;;

	push)
		lastTag
		echo -e "${YELLOW}Push ${RED}$num_tag ${YELLOW}for metarepo and submodules ${NC}"
		yesno
		if [[ "$@" == *--dry* ]]; then
			echo "Push $tag_name$"
			exit 0
		fi
		pushTag
		;;

	checkout)
		lastTag
		echo -e "${YELLOW}Checkout ${RED}$num_tag ${YELLOW}for metarepo and submodules ${NC}"
		yesno
		if [[ "$@" == *--dry* ]]; then
			echo "checkout $tag_name$"
			exit 0
		fi
		checkoutTag
		;;

	delete)
		lastTag
		if [[ "$@" == *--last* ]]; then
			echo -e "${YELLOW}Delete ${RED}$num_tag ${YELLOW}for metarepo and submodules ${NC}"
			yesno
			if [[ "$@" == *--dry* ]]; then
				echo "delete $num_tag"
			exit 0
			fi
		fi

		if [[ "$@" == *--first* ]]; then
			echo -e "${YELLOW}Delete ${RED}$num_tag ${YELLOW}for metarepo and submodules ${NC}"
			yesno
			if [[ "$@" != *--dry* ]]; then
				echo "delete $num_tag"
			exit 0
			fi
		fi
		deleteTag
		;;

	debug)
		lastTag
#		echo $num_tag
#		firstTag
#		echo $num_tag
		tagList
		echo ${gittaglist[@]}
		;;

	*)
		echo "Unknown option"
		echo "Use --help"
		;;
esac
